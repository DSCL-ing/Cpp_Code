#pragma once


linux版本号

主版本号.次版本号.修正次数 2.6.30    -- 次版本号为偶数:稳定版   奇数:测试版


$ 操作系统是一款进行软硬件管理的软件

$ 操作系统存在的意义:操作系统对软硬件进行合理管理(手段/方法),以达到为上层用户提供良好的,稳定的,安全的运行环境的目的

$ 开机就是加载操作系统,俗称开机

# mkdir 目录名  //创建目录(linux)/文件夹(win)

# pwd  //显式当前目录的绝对路径

# touch	文件名.后缀          //创建普通文件

//#命令 -[命令选项]  --后序学习"命令行参数和环境变量"
//command 
//command not found :找不到命令

#echo "字符串" > 文件 //清空文件再写入,'w'


$ 文件 = 内容+属性
文件操作分为1.内容操作 2.属性操作

# ls -l(l:list) //以list的形式显式更多的属性

$ 以.开头的文件/目录是隐藏文件/目录

# ls -ul  //以uid形式显式属性

# .  //当前路径
# .. //上级路径

# C:\Users\26390\Desktop //  windows下的路径,  (反斜杠) \ : 路径分割符
# /root/test             //  linux下的路径,      (斜杠) / : 路径分隔符

# ls -ld /   //只显示路径,不显示内容
$ / 为linux下的根,linux下为目录为蓝色
$ windows下文件夹内可以有新的文件夹,linux下目录内可以有新的目录 -- 所以linux的根 / 和路径分隔符 / 不冲突
$ linux整体是一个多叉树的样子/结构

$ windows通过路径来定位文件/文件夹,linux也是如此.  
为什么呢? > 任何一个目录都可以有多个子目录,但一个子目录只有一个父目录 -->因此一条路径能唯一标识一目录/文件 
$ 路径分为1.绝对路径 2.相对路径(相对是相对于当前路径,如果当前路径改变了,则相对路径也会发生改变 ->失效)

$ 绝对路径使用场景:准确但麻烦,一般是在某些配置环境中,进行对某种文件进行配置时采用!
$ 相对路径使用场景:用起来简单,是后序指令操作时,常用的路径定位方案!

# cd ~  //进入/home目录
$ 超级用户/管理员root的~独立位于/root
$ 普通用户的~都位于/home底下 -- ~称为普通用户的家目录
$ window也有家目录,位于C:\Users ,

# cd -   //回到上一次访问的目录

热键:高频被使用的按键
# 快速双击tab键  -->命令的自动补齐:1.显式出匹配的所有命名 2.显示出匹配目录下的所有文件
# 不想进入目录又想查看其他目录有哪些文件 --> 无脑 tab../../../../

# tree [空] / [.] / [..] / [其他目录]   //以树的形式把指定目录打印出来,不加命令选项默认是当前目录
$ -bash: tree: command not found 解决方法:root下# yum install -y tree  //如果是Ubuntu,则是# apt-get install -y tree

$ 按键:ctrl+C  //停止当前活动/打印/刷屏 /终止程序的运行/刷屏

# touch 文件 或 ../文件 //在当前目录创建一个普通文本文件 或在指定目录创建一个普通文本文件

# nano 文件  //使用nano编辑器u是什么意思打开文件

$ nano :nano是Unix/Linux下的一个文本编辑器
nano编辑器的快捷键使用
Ctrl+G 帮助
Ctrl+X 退出
Ctrl+O 保存
Ctrl+R 复制指定文件内容
Ctrl+W 查找
Ctrl+\ 替换
Ctrl+K 剪切
Ctrl+U 粘贴
Ctrl+J 调整段落
Ctrl+T 检查拼写
Ctrl+C 光标位置信息
Ctrl+Shift+_ 跳转到指定行
Alt+U 撤销
Alt+E 反撤销
Alt+A 从光标位置开始标记/选择
Alt+6 复制
Ctrl+3 & Shift+3 显示行号
//nano不能用数字小键盘,只能用数字横键盘

//cancel :取消

# cat 文件  // 打印/显式文件内容

# gcc .c文件 //编译.c文件,得到a.out可执行文件 //可执行文件是绿色
# ./a.out    //执行可执行文件,执行a.out文件  -- 可执行文件在linux下必须带./  ,后面学

$ 云服务器可以重启,但不要轻易关机

# stat 文件  //获取文件的所有属性
$ 任何文件都有三种时间:A.C.M.时间:1.Access(访问) 2.Modify(内容) 3.Change(属性)
$ ll显式的时间是M时间

# mkdir -p d1/d2/d3/...   //创建一串路径/目录; 递归创建多个目录

# rmdir 目录     //删除目录,只能删除非空目录 -- 也没有支持递归删除的命令选项,所以目前没什么用
//rmdir:failed to remove :删除失败

# rm  指定目录/指定文件   //删除文件或目录  -- 什么都能删,只要权限够
# rm -r 指定目录          //递归删除目录内的所有文件/目录
# rm -rf 指定目录         //强制递归删除目录内的所有文件/目录 -- 不提示/不通知/不需要确认 直接删完

$ 普通用户只能在 /home/自己/... 内创建文件 ,root在哪里都可以创建

//3

//判断绝对路径 1.绝对路径是以/开始的 2.绝对路径放在任何目录下都与其他路径无关


$ 输入框为空时按一下table可以显式当前linux系统有多少条指令 -- 阿里云轻量应用级有1265条左右

# rm -r 目录  //通过rm删除目录,递归删除目录  -- 因为目录本身就是递归定义的

# sudo touch 文件 // 以root身份创建文件

# rm  文件  //只能删除普通文件 -- 默认只能删除普通文件

# yum install -y man-pages //安装man手册
# man [号] xx  //搜索[几号]man手册并进入,没有号码则默认搜索全部
# man man //打开man手册首页

# sudo 命令  //命令提权

# cp 普通文件 目录 // 拷贝普通文件到目录中
# cp -r 目录  目录 // 拷贝目录到目录中,必须带-r,递归拷贝 

$ 命令选项可以放中间也可以放在最后 // 最好保持放中间,有些系统不支持,如mac

# mv 目录/文件 目录  //移动目录/文件,不需要带递归-r命令选项
# mb 目录/文件 ..    //移动文件/目录到上级目录
# mb 目录/文件 .    //移动文件/目录到当前目录
