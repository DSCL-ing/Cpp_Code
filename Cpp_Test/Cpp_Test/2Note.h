#pragma once



//继承
/**
 * 继承受权限影响
 * 有public protected private 三种继承
 * 
 * 基本语法:
 * class student : public Person
 * {
 * 
 * 详细:跳转20inheritance -- C++NO.23 -- 3_27
 * 
 */

//继承和组合
/**
 * 组合即为在类成员是其他自定义类型:如适配器中栈,队列,反向迭代器.
 * 
 * 继承的耦合度高 , 组合的耦合度低
 * 
 * 耦合度:联系强度,软件工程领域:高内聚,低耦合; 类与类之间高耦合->解耦 ; 继承解耦->组合
 * 
 * 继承被称为白盒复用(white_box reuse)
 * 组合被称为黑箱复用(black_box reuse)
 * 
 * 继承是is-a关系:我就是你
 * 组合是has-a关系:我里面有一个你
 * 
 * 一般来说组合更好
 * 不过继承也有用武之地:面向对象三大特性,继承,封装,多态. 有继承才有多态
 * 
 */

//抽象类
/**
 * 1.纯虚函数:在虚函数后面写上=0,则这个函数为纯虚函数  例:virtual void fun() = 0;
 *   纯虚函数只需要声明,不能写函数体.
 * 
 * 2.抽象类的定义:包含纯虚函数的类叫做抽象类,也叫接口类.
 * $ 抽象类不能实例化出对象.派生类继承后也不能直接实例化出对象,必须重写纯虚函数后才能实例化对象.
 * $ 纯虚函数规范了派生类必须重写(强制必须重写),  典型接口继承!!!
 * 
 * .
 */






